package flat/website/functions

import flatlang/io/File
import flatlang/io/FileReader
import flatlang/json/JsonDeserializer
import flatlang/datastruct/HashMap
import flatlang/http/Http
import flatlang/time/Timer

class {
  public construct() {}

  public async run() -> String {
    let Array<HashMap<String, String>> badges = JsonDeserializer().parseArray(File("res/badges.json"))
    let svgs = HashMap<String, String>[]
    let timer = Timer():start()

    var HashMap<String, String> badgeMap
    var String svgData
    var String urlData
    var String labelData

    external {
      const result = await Promise.all(
        #{badges.data}.map(async (badge) => {
          #{badgeMap} = badge;

          const url = #{badgeMap["url"]};
          const label = #{badgeMap["label"]};
          const svg = await #{Http.get(badgeMap["svg"])$};

          return {
            svg: svg.data,
            url,
            label
          };
        })
      );

      result.forEach((entry) => {
        #{svgData} = entry.svg;
        #{urlData} = entry.url;
        #{labelData} = entry.label;
        #{
          svgs.add(
            HashMap()
              :add("svg", svgData)
              :add("url", urlData)
              :add("label", labelData)
          )
        }
      });
    }

    Console.writeLine(timer.stop())

    var Int x = 0
    var Int y = 0
    var Int maxWidth = 0

    let svgContents = svgs.map((entry) => {
      let svgContent = entry["svg"]
      let success = svgContent.contains("passing")
      let content = generateStatusBox(entry["url"], success, x, y)

      maxWidth = Math.max(x + 20, maxWidth)

      x += 20 + 1

      if (x > 300) {
        x = 0
        y += 20 + 1
      }

      return content
    })

    return "|
      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 #{maxWidth} #{y + 20}\">
        <defs xmlns=\"http://www.w3.org/2000/svg\">
          <linearGradient id=\"success-fill\" x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\">
            <stop stop-color=\"\#34D058\" offset=\"0%\"/>
            <stop stop-color=\"\#28A745\" offset=\"100%\"/>
          </linearGradient>
          <linearGradient id=\"failing-fill\" x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\">
            <stop stop-color=\"\#D73A49\" offset=\"0%\"/>
            <stop stop-color=\"\#CB2431\" offset=\"100%\"/>
          </linearGradient>
        </defs>
        #{svgContents.join("")}
      </svg>
      |"
  }

  static generateStatusBox(String url, Bool success, Int x, Int y) -> String {
    return "|
      <a target=\"_blank\" href=\"#{url}\">
        <g font-family=\"'DejaVu Sans',Verdana,Geneva,sans-serif\" font-size=\"11\">
          <rect x=\"#{x}\" y=\"#{y}\" width=\"20\" height=\"20\" ry=\"2\" rx=\"2\" fill=\"url(#{success ? "\#success-fill" : "\#failing-fill"})\"/>
        </g>
      </a>
      |"
  }
}
